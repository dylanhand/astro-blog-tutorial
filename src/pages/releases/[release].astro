---
import { Picture } from "astro:assets";
import { getCollection } from "astro:content";
import BaseLayout from '../../layouts/BaseLayout.astro';
import type { /*InferGetStaticParamsType,*/ InferGetStaticPropsType, GetStaticPaths } from 'astro';

export const getStaticPaths = (async () => {
    const allReleases = await getCollection("releases")
    return allReleases.map((release) => ({
        params: { release: release.data.slug },
        props: {
            release,
        },
    }));
}) satisfies GetStaticPaths;

// type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

// const { tag } = Astro.params as Params;
// const { release } = Astro.props as Props;
const { release } = Astro.props as Props;
const data = release.data;
---
<BaseLayout pageTitle={data.name}>
  <Picture 
    src={data.image} 
    alt={data.imageAlt} 
    formats={['avif', 'webp']} 
    widths={[200, 400]}
    width="200" 
    height="200" 
  />
  <p>{data.name}</p>
  <p>{data.date.toDateString()}</p>
  {data.bandcamp && <p>bandcamp: {data.bandcamp}</p>}
  <p>spotify: {data.spotify}</p>
  <p>lyrics:</p>
  <div class="lyrics">
    {data.lyrics.split("\n").map(line => (
      <p>{line}</p>
    ))}
  </div>
  <!-- <ul> -->
    <!-- {posts.map(post => <BlogPost title={post.data.title} date={post.data.pubDate} url=`/posts/${post.slug}` />)} -->
  <!-- </ul> -->
</BaseLayout>
<style>
  .lyrics {
      line-height: 0.5;
  }
</style>